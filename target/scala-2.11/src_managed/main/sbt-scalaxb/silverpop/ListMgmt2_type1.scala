// Generated by <a href="http://scalaxb.org/">scalaxb</a>.
package silverpop
trait EmailType

object EmailType {
  def fromString(value: String, scope: scala.xml.NamespaceBinding): EmailType = value match {
    case "0" => Number0Value5
    case "1" => Number1Value5
    case "2" => Number2Value3

  }
}

case object Number0Value5 extends EmailType { override def toString = "0" }
case object Number1Value5 extends EmailType { override def toString = "1" }
case object Number2Value3 extends EmailType { override def toString = "2" }

trait CreatedFrom

object CreatedFrom {
  def fromString(value: String, scope: scala.xml.NamespaceBinding): CreatedFrom = value match {
    case "0" => Number0Value6
    case "1" => Number1Value6
    case "2" => Number2Value4
    case "3" => Number3Value

  }
}

case object Number0Value6 extends CreatedFrom { override def toString = "0" }
case object Number1Value6 extends CreatedFrom { override def toString = "1" }
case object Number2Value4 extends CreatedFrom { override def toString = "2" }
case object Number3Value extends CreatedFrom { override def toString = "3" }


case class FaultErrorTypeType4(faulterrortypetype4sequence1: Option[silverpop.FaultErrorTypeType4Sequence1] = None)

case class FaultErrorTypeType4Sequence1(errorid: Option[String] = None,
  module: Option[String] = None,
  classValue: Option[String] = None,
  method: Option[String] = None)


case class FaultDetailTypeType4(faultdetailtypetype4sequence1: Option[silverpop.FaultDetailTypeType4Sequence1] = None)

case class FaultDetailTypeType4Sequence1(error: Option[silverpop.FaultErrorTypeType4] = None)

case class FaultTypeType4(faulttypetype4sequence1: Option[silverpop.FaultTypeType4Sequence1] = None)

case class FaultTypeType4Sequence1(Request: Option[String] = None,
  FaultCode: Option[String] = None,
  FaultString: Option[String] = None,
  detail: Option[silverpop.FaultDetailTypeType4] = None)


case class ListMgmtResponseType(SUCCESS: Option[Boolean] = None,
  Fault: Option[silverpop.FaultTypeType4] = None,
  EMAIL: Option[String] = None,
  Email: Option[String] = None,
  RecipientId: Option[String] = None,
  EmailType: Option[silverpop.EmailType] = None,
  LastModified: Option[String] = None,
  CreatedFrom: Option[silverpop.CreatedFrom] = None,
  OptedIn: Option[String] = None,
  OptedOut: Option[String] = None,
  ResumeSendDate: Option[String] = None,
  ORGANIZATION_ID: Option[String] = None,
  VISITOR_ASSOCIATION: Option[String] = None,
  COLUMNS: Option[silverpop.ColumnsElementTypeType2] = None,
  CONTACT_LISTS: Option[silverpop.ContactListsElementType] = None)


case class AddRecipientRequestType(LIST_ID: Long,
  CREATED_FROM: silverpop.CreatedFrom,
  SEND_AUTOREPLY: Boolean,
  UPDATE_IF_FOUND: Boolean,
  ALLOW_HTML: Boolean,
  COLUMN: Seq[silverpop.ColumnElementTypeType2] = Nil,
  SYNC_FIELDS: Option[silverpop.SyncFieldsElementType] = None,
  VISITOR_KEY: Option[String] = None)


case class OptOutRecipientRequestType(LIST_ID: Long,
  EMAIL: Option[String] = None,
  COLUMN: Seq[silverpop.ColumnElementTypeType2] = Nil,
  MAILING_ID: Option[Long] = None,
  RECIPIENT_ID: Option[String] = None,
  JOB_ID: Option[String] = None)


case class UpdateRecipientRequestType(LIST_ID: Long,
  OLD_EMAIL: Option[String] = None,
  RECIPIENT_ID: Option[Long] = None,
  ENCODED_RECIPIENT_ID: Option[String] = None,
  SEND_AUTOREPLY: Boolean,
  ALLOW_HTML: Boolean,
  COLUMN: Seq[silverpop.ColumnElementTypeType2] = Nil,
  SYNC_FIELDS: Option[silverpop.SyncFieldsElementType] = None,
  VISITOR_KEY: Option[String] = None)


case class SelectRecipientRequestType(LIST_ID: Long,
  EMAIL: Option[String] = None,
  ENCODED_RECIPIENT_ID: Option[String] = None,
  RETURN_CONTACT_LISTS: Option[Boolean] = None,
  COLUMN: Seq[silverpop.ColumnElementTypeType2] = Nil)


case class DoubleOptInRequestType(LIST_ID: Long,
  SEND_AUTOREPLY: Boolean,
  ALLOW_HTML: Boolean,
  COLUMN: Seq[silverpop.ColumnElementTypeType2] = Nil,
  TABLES: Option[silverpop.TablesElementType] = None)


case class ColumnsElementTypeType2(COLUMN: silverpop.ColumnElementTypeType2*)


case class ContactListsElementType(CONTACT_LIST_ID: Long*)


case class SyncFieldsElementType(SYNC_FIELD: silverpop.ColumnElementTypeType2*)


case class TableColumnsElementTypeType(COLUMN: silverpop.ColumnElementTypeType2*)


case class TableElementType(TABLE_NAME: String,
  TABLE_COLUMNS: silverpop.TableColumnsElementTypeType)


case class ColumnElementTypeType2(NAME: String,
  VALUE: String)


case class TablesElementType(TABLE: silverpop.TableElementType*)

